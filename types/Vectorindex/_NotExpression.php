<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: vectorindex.proto

namespace Vectorindex;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>vectorindex._NotExpression</code>
 */
class _NotExpression extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.vectorindex._FilterExpression expression_to_negate = 1;</code>
     */
    protected $expression_to_negate = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Vectorindex\_FilterExpression $expression_to_negate
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Vectorindex::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.vectorindex._FilterExpression expression_to_negate = 1;</code>
     * @return \Vectorindex\_FilterExpression|null
     */
    public function getExpressionToNegate()
    {
        return $this->expression_to_negate;
    }

    public function hasExpressionToNegate()
    {
        return isset($this->expression_to_negate);
    }

    public function clearExpressionToNegate()
    {
        unset($this->expression_to_negate);
    }

    /**
     * Generated from protobuf field <code>.vectorindex._FilterExpression expression_to_negate = 1;</code>
     * @param \Vectorindex\_FilterExpression $var
     * @return $this
     */
    public function setExpressionToNegate($var)
    {
        GPBUtil::checkMessage($var, \Vectorindex\_FilterExpression::class);
        $this->expression_to_negate = $var;

        return $this;
    }

}

