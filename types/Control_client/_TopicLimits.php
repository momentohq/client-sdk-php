<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: controlclient.proto

namespace Control_client;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>control_client._TopicLimits</code>
 */
class _TopicLimits extends \Google\Protobuf\Internal\Message
{
    /**
     * The amount of messages that can be published per second
     *
     * Generated from protobuf field <code>uint32 max_publish_rate = 1;</code>
     */
    protected $max_publish_rate = 0;
    /**
     * The maximum amount of active subscriptions per cache
     *
     * Generated from protobuf field <code>uint32 max_subscription_count = 2;</code>
     */
    protected $max_subscription_count = 0;
    /**
     * The maximum size of a single publish message, in KiB
     *
     * Generated from protobuf field <code>uint32 max_publish_message_size_kb = 3;</code>
     */
    protected $max_publish_message_size_kb = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $max_publish_rate
     *           The amount of messages that can be published per second
     *     @type int $max_subscription_count
     *           The maximum amount of active subscriptions per cache
     *     @type int $max_publish_message_size_kb
     *           The maximum size of a single publish message, in KiB
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Controlclient::initOnce();
        parent::__construct($data);
    }

    /**
     * The amount of messages that can be published per second
     *
     * Generated from protobuf field <code>uint32 max_publish_rate = 1;</code>
     * @return int
     */
    public function getMaxPublishRate()
    {
        return $this->max_publish_rate;
    }

    /**
     * The amount of messages that can be published per second
     *
     * Generated from protobuf field <code>uint32 max_publish_rate = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setMaxPublishRate($var)
    {
        GPBUtil::checkUint32($var);
        $this->max_publish_rate = $var;

        return $this;
    }

    /**
     * The maximum amount of active subscriptions per cache
     *
     * Generated from protobuf field <code>uint32 max_subscription_count = 2;</code>
     * @return int
     */
    public function getMaxSubscriptionCount()
    {
        return $this->max_subscription_count;
    }

    /**
     * The maximum amount of active subscriptions per cache
     *
     * Generated from protobuf field <code>uint32 max_subscription_count = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setMaxSubscriptionCount($var)
    {
        GPBUtil::checkUint32($var);
        $this->max_subscription_count = $var;

        return $this;
    }

    /**
     * The maximum size of a single publish message, in KiB
     *
     * Generated from protobuf field <code>uint32 max_publish_message_size_kb = 3;</code>
     * @return int
     */
    public function getMaxPublishMessageSizeKb()
    {
        return $this->max_publish_message_size_kb;
    }

    /**
     * The maximum size of a single publish message, in KiB
     *
     * Generated from protobuf field <code>uint32 max_publish_message_size_kb = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setMaxPublishMessageSizeKb($var)
    {
        GPBUtil::checkUint32($var);
        $this->max_publish_message_size_kb = $var;

        return $this;
    }

}

