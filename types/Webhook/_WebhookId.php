<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: webhook.proto

namespace Webhook;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>webhook._WebhookId</code>
 */
class _WebhookId extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string cache_name = 1;</code>
     */
    protected $cache_name = '';
    /**
     * This is limited to 128 chars.
     *
     * Generated from protobuf field <code>string webhook_name = 2;</code>
     */
    protected $webhook_name = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $cache_name
     *     @type string $webhook_name
     *           This is limited to 128 chars.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Webhook::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string cache_name = 1;</code>
     * @return string
     */
    public function getCacheName()
    {
        return $this->cache_name;
    }

    /**
     * Generated from protobuf field <code>string cache_name = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setCacheName($var)
    {
        GPBUtil::checkString($var, True);
        $this->cache_name = $var;

        return $this;
    }

    /**
     * This is limited to 128 chars.
     *
     * Generated from protobuf field <code>string webhook_name = 2;</code>
     * @return string
     */
    public function getWebhookName()
    {
        return $this->webhook_name;
    }

    /**
     * This is limited to 128 chars.
     *
     * Generated from protobuf field <code>string webhook_name = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setWebhookName($var)
    {
        GPBUtil::checkString($var, True);
        $this->webhook_name = $var;

        return $this;
    }

}

