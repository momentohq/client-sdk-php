<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: auth.proto

namespace Auth;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>auth._RefreshApiTokenResponse</code>
 */
class _RefreshApiTokenResponse extends \Google\Protobuf\Internal\Message
{
    /**
     * the new api key used for authentication against Momento backend
     *
     * Generated from protobuf field <code>string api_key = 1;</code>
     */
    protected $api_key = '';
    /**
     * the token that will allow the api token to be refreshed, which will
     * give you back a new refresh and api token
     *
     * Generated from protobuf field <code>string refresh_token = 2;</code>
     */
    protected $refresh_token = '';
    /**
     * the Momento endpoint that this token is allowed to make requests against
     *
     * Generated from protobuf field <code>string endpoint = 3;</code>
     */
    protected $endpoint = '';
    /**
     * epoch seconds when the api token expires
     *
     * Generated from protobuf field <code>uint64 valid_until = 4;</code>
     */
    protected $valid_until = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $api_key
     *           the new api key used for authentication against Momento backend
     *     @type string $refresh_token
     *           the token that will allow the api token to be refreshed, which will
     *           give you back a new refresh and api token
     *     @type string $endpoint
     *           the Momento endpoint that this token is allowed to make requests against
     *     @type int|string $valid_until
     *           epoch seconds when the api token expires
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Auth::initOnce();
        parent::__construct($data);
    }

    /**
     * the new api key used for authentication against Momento backend
     *
     * Generated from protobuf field <code>string api_key = 1;</code>
     * @return string
     */
    public function getApiKey()
    {
        return $this->api_key;
    }

    /**
     * the new api key used for authentication against Momento backend
     *
     * Generated from protobuf field <code>string api_key = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setApiKey($var)
    {
        GPBUtil::checkString($var, True);
        $this->api_key = $var;

        return $this;
    }

    /**
     * the token that will allow the api token to be refreshed, which will
     * give you back a new refresh and api token
     *
     * Generated from protobuf field <code>string refresh_token = 2;</code>
     * @return string
     */
    public function getRefreshToken()
    {
        return $this->refresh_token;
    }

    /**
     * the token that will allow the api token to be refreshed, which will
     * give you back a new refresh and api token
     *
     * Generated from protobuf field <code>string refresh_token = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setRefreshToken($var)
    {
        GPBUtil::checkString($var, True);
        $this->refresh_token = $var;

        return $this;
    }

    /**
     * the Momento endpoint that this token is allowed to make requests against
     *
     * Generated from protobuf field <code>string endpoint = 3;</code>
     * @return string
     */
    public function getEndpoint()
    {
        return $this->endpoint;
    }

    /**
     * the Momento endpoint that this token is allowed to make requests against
     *
     * Generated from protobuf field <code>string endpoint = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setEndpoint($var)
    {
        GPBUtil::checkString($var, True);
        $this->endpoint = $var;

        return $this;
    }

    /**
     * epoch seconds when the api token expires
     *
     * Generated from protobuf field <code>uint64 valid_until = 4;</code>
     * @return int|string
     */
    public function getValidUntil()
    {
        return $this->valid_until;
    }

    /**
     * epoch seconds when the api token expires
     *
     * Generated from protobuf field <code>uint64 valid_until = 4;</code>
     * @param int|string $var
     * @return $this
     */
    public function setValidUntil($var)
    {
        GPBUtil::checkUint64($var);
        $this->valid_until = $var;

        return $this;
    }

}

