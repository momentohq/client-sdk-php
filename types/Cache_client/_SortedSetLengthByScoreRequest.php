<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: cacheclient.proto

namespace Cache_client;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>cache_client._SortedSetLengthByScoreRequest</code>
 */
class _SortedSetLengthByScoreRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>bytes set_name = 1;</code>
     */
    protected $set_name = '';
    protected $min;
    protected $max;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $set_name
     *     @type float $inclusive_min
     *     @type float $exclusive_min
     *     @type \Common\_Unbounded $unbounded_min
     *     @type float $inclusive_max
     *     @type float $exclusive_max
     *     @type \Common\_Unbounded $unbounded_max
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Cacheclient::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>bytes set_name = 1;</code>
     * @return string
     */
    public function getSetName()
    {
        return $this->set_name;
    }

    /**
     * Generated from protobuf field <code>bytes set_name = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setSetName($var)
    {
        GPBUtil::checkString($var, False);
        $this->set_name = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>double inclusive_min = 2;</code>
     * @return float
     */
    public function getInclusiveMin()
    {
        return $this->readOneof(2);
    }

    public function hasInclusiveMin()
    {
        return $this->hasOneof(2);
    }

    /**
     * Generated from protobuf field <code>double inclusive_min = 2;</code>
     * @param float $var
     * @return $this
     */
    public function setInclusiveMin($var)
    {
        GPBUtil::checkDouble($var);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>double exclusive_min = 3;</code>
     * @return float
     */
    public function getExclusiveMin()
    {
        return $this->readOneof(3);
    }

    public function hasExclusiveMin()
    {
        return $this->hasOneof(3);
    }

    /**
     * Generated from protobuf field <code>double exclusive_min = 3;</code>
     * @param float $var
     * @return $this
     */
    public function setExclusiveMin($var)
    {
        GPBUtil::checkDouble($var);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.common._Unbounded unbounded_min = 4;</code>
     * @return \Common\_Unbounded|null
     */
    public function getUnboundedMin()
    {
        return $this->readOneof(4);
    }

    public function hasUnboundedMin()
    {
        return $this->hasOneof(4);
    }

    /**
     * Generated from protobuf field <code>.common._Unbounded unbounded_min = 4;</code>
     * @param \Common\_Unbounded $var
     * @return $this
     */
    public function setUnboundedMin($var)
    {
        GPBUtil::checkMessage($var, \Common\_Unbounded::class);
        $this->writeOneof(4, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>double inclusive_max = 5;</code>
     * @return float
     */
    public function getInclusiveMax()
    {
        return $this->readOneof(5);
    }

    public function hasInclusiveMax()
    {
        return $this->hasOneof(5);
    }

    /**
     * Generated from protobuf field <code>double inclusive_max = 5;</code>
     * @param float $var
     * @return $this
     */
    public function setInclusiveMax($var)
    {
        GPBUtil::checkDouble($var);
        $this->writeOneof(5, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>double exclusive_max = 6;</code>
     * @return float
     */
    public function getExclusiveMax()
    {
        return $this->readOneof(6);
    }

    public function hasExclusiveMax()
    {
        return $this->hasOneof(6);
    }

    /**
     * Generated from protobuf field <code>double exclusive_max = 6;</code>
     * @param float $var
     * @return $this
     */
    public function setExclusiveMax($var)
    {
        GPBUtil::checkDouble($var);
        $this->writeOneof(6, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.common._Unbounded unbounded_max = 7;</code>
     * @return \Common\_Unbounded|null
     */
    public function getUnboundedMax()
    {
        return $this->readOneof(7);
    }

    public function hasUnboundedMax()
    {
        return $this->hasOneof(7);
    }

    /**
     * Generated from protobuf field <code>.common._Unbounded unbounded_max = 7;</code>
     * @param \Common\_Unbounded $var
     * @return $this
     */
    public function setUnboundedMax($var)
    {
        GPBUtil::checkMessage($var, \Common\_Unbounded::class);
        $this->writeOneof(7, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getMin()
    {
        return $this->whichOneof("min");
    }

    /**
     * @return string
     */
    public function getMax()
    {
        return $this->whichOneof("max");
    }

}

