<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: cachepubsub.proto

namespace Cache_client\Pubsub;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A value to publish through a topic.
 *
 * Generated from protobuf message <code>cache_client.pubsub._PublishRequest</code>
 */
class _PublishRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Cache namespace for the topic to which you want to send the value.
     *
     * Generated from protobuf field <code>string cache_name = 1;</code>
     */
    protected $cache_name = '';
    /**
     * The literal topic name to which you want to send the value.
     *
     * Generated from protobuf field <code>string topic = 2;</code>
     */
    protected $topic = '';
    /**
     * The value you want to send to the topic. All current subscribers will receive
     * this, should the whims of the Internet prove merciful.
     *
     * Generated from protobuf field <code>.cache_client.pubsub._TopicValue value = 3;</code>
     */
    protected $value = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $cache_name
     *           Cache namespace for the topic to which you want to send the value.
     *     @type string $topic
     *           The literal topic name to which you want to send the value.
     *     @type \Cache_client\Pubsub\_TopicValue $value
     *           The value you want to send to the topic. All current subscribers will receive
     *           this, should the whims of the Internet prove merciful.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Cachepubsub::initOnce();
        parent::__construct($data);
    }

    /**
     * Cache namespace for the topic to which you want to send the value.
     *
     * Generated from protobuf field <code>string cache_name = 1;</code>
     * @return string
     */
    public function getCacheName()
    {
        return $this->cache_name;
    }

    /**
     * Cache namespace for the topic to which you want to send the value.
     *
     * Generated from protobuf field <code>string cache_name = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setCacheName($var)
    {
        GPBUtil::checkString($var, True);
        $this->cache_name = $var;

        return $this;
    }

    /**
     * The literal topic name to which you want to send the value.
     *
     * Generated from protobuf field <code>string topic = 2;</code>
     * @return string
     */
    public function getTopic()
    {
        return $this->topic;
    }

    /**
     * The literal topic name to which you want to send the value.
     *
     * Generated from protobuf field <code>string topic = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setTopic($var)
    {
        GPBUtil::checkString($var, True);
        $this->topic = $var;

        return $this;
    }

    /**
     * The value you want to send to the topic. All current subscribers will receive
     * this, should the whims of the Internet prove merciful.
     *
     * Generated from protobuf field <code>.cache_client.pubsub._TopicValue value = 3;</code>
     * @return \Cache_client\Pubsub\_TopicValue|null
     */
    public function getValue()
    {
        return $this->value;
    }

    public function hasValue()
    {
        return isset($this->value);
    }

    public function clearValue()
    {
        unset($this->value);
    }

    /**
     * The value you want to send to the topic. All current subscribers will receive
     * this, should the whims of the Internet prove merciful.
     *
     * Generated from protobuf field <code>.cache_client.pubsub._TopicValue value = 3;</code>
     * @param \Cache_client\Pubsub\_TopicValue $var
     * @return $this
     */
    public function setValue($var)
    {
        GPBUtil::checkMessage($var, \Cache_client\Pubsub\_TopicValue::class);
        $this->value = $var;

        return $this;
    }

}

