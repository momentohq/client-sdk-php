<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: cachepubsub.proto

namespace Cache_client\Pubsub;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A description of how you want to subscribe to a topic.
 *
 * Generated from protobuf message <code>cache_client.pubsub._SubscriptionRequest</code>
 */
class _SubscriptionRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Cache namespace for the topic to which you want to subscribe.
     *
     * Generated from protobuf field <code>string cache_name = 1;</code>
     */
    protected $cache_name = '';
    /**
     * The literal topic name to which you want to subscribe.
     *
     * Generated from protobuf field <code>string topic = 2;</code>
     */
    protected $topic = '';
    /**
     * If provided, attempt to reconnect to the topic and replay messages starting from
     * the provided sequence number. You may get a discontinuity if some (or all) of the
     * messages are not available.
     * If provided at 1, you may receive some messages leading up to whatever the
     * newest message is. The exact amount is unspecified and subject to change.
     * If not provided (or 0), the subscription will begin with the latest messages.
     *
     * Generated from protobuf field <code>uint64 resume_at_topic_sequence_number = 3;</code>
     */
    protected $resume_at_topic_sequence_number = 0;
    /**
     * Determined by the service when a topic is created. This clarifies the intent of
     * a subscription, and ensures the right messages are sent for a given
     * `resume_at_topic_sequence_number`.
     * Include this in your Subscribe() calls when you are reconnecting. The right value
     * is the last sequence_page you received.
     *
     * Generated from protobuf field <code>uint64 sequence_page = 4;</code>
     */
    protected $sequence_page = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $cache_name
     *           Cache namespace for the topic to which you want to subscribe.
     *     @type string $topic
     *           The literal topic name to which you want to subscribe.
     *     @type int|string $resume_at_topic_sequence_number
     *           If provided, attempt to reconnect to the topic and replay messages starting from
     *           the provided sequence number. You may get a discontinuity if some (or all) of the
     *           messages are not available.
     *           If provided at 1, you may receive some messages leading up to whatever the
     *           newest message is. The exact amount is unspecified and subject to change.
     *           If not provided (or 0), the subscription will begin with the latest messages.
     *     @type int|string $sequence_page
     *           Determined by the service when a topic is created. This clarifies the intent of
     *           a subscription, and ensures the right messages are sent for a given
     *           `resume_at_topic_sequence_number`.
     *           Include this in your Subscribe() calls when you are reconnecting. The right value
     *           is the last sequence_page you received.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Cachepubsub::initOnce();
        parent::__construct($data);
    }

    /**
     * Cache namespace for the topic to which you want to subscribe.
     *
     * Generated from protobuf field <code>string cache_name = 1;</code>
     * @return string
     */
    public function getCacheName()
    {
        return $this->cache_name;
    }

    /**
     * Cache namespace for the topic to which you want to subscribe.
     *
     * Generated from protobuf field <code>string cache_name = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setCacheName($var)
    {
        GPBUtil::checkString($var, True);
        $this->cache_name = $var;

        return $this;
    }

    /**
     * The literal topic name to which you want to subscribe.
     *
     * Generated from protobuf field <code>string topic = 2;</code>
     * @return string
     */
    public function getTopic()
    {
        return $this->topic;
    }

    /**
     * The literal topic name to which you want to subscribe.
     *
     * Generated from protobuf field <code>string topic = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setTopic($var)
    {
        GPBUtil::checkString($var, True);
        $this->topic = $var;

        return $this;
    }

    /**
     * If provided, attempt to reconnect to the topic and replay messages starting from
     * the provided sequence number. You may get a discontinuity if some (or all) of the
     * messages are not available.
     * If provided at 1, you may receive some messages leading up to whatever the
     * newest message is. The exact amount is unspecified and subject to change.
     * If not provided (or 0), the subscription will begin with the latest messages.
     *
     * Generated from protobuf field <code>uint64 resume_at_topic_sequence_number = 3;</code>
     * @return int|string
     */
    public function getResumeAtTopicSequenceNumber()
    {
        return $this->resume_at_topic_sequence_number;
    }

    /**
     * If provided, attempt to reconnect to the topic and replay messages starting from
     * the provided sequence number. You may get a discontinuity if some (or all) of the
     * messages are not available.
     * If provided at 1, you may receive some messages leading up to whatever the
     * newest message is. The exact amount is unspecified and subject to change.
     * If not provided (or 0), the subscription will begin with the latest messages.
     *
     * Generated from protobuf field <code>uint64 resume_at_topic_sequence_number = 3;</code>
     * @param int|string $var
     * @return $this
     */
    public function setResumeAtTopicSequenceNumber($var)
    {
        GPBUtil::checkUint64($var);
        $this->resume_at_topic_sequence_number = $var;

        return $this;
    }

    /**
     * Determined by the service when a topic is created. This clarifies the intent of
     * a subscription, and ensures the right messages are sent for a given
     * `resume_at_topic_sequence_number`.
     * Include this in your Subscribe() calls when you are reconnecting. The right value
     * is the last sequence_page you received.
     *
     * Generated from protobuf field <code>uint64 sequence_page = 4;</code>
     * @return int|string
     */
    public function getSequencePage()
    {
        return $this->sequence_page;
    }

    /**
     * Determined by the service when a topic is created. This clarifies the intent of
     * a subscription, and ensures the right messages are sent for a given
     * `resume_at_topic_sequence_number`.
     * Include this in your Subscribe() calls when you are reconnecting. The right value
     * is the last sequence_page you received.
     *
     * Generated from protobuf field <code>uint64 sequence_page = 4;</code>
     * @param int|string $var
     * @return $this
     */
    public function setSequencePage($var)
    {
        GPBUtil::checkUint64($var);
        $this->sequence_page = $var;

        return $this;
    }

}

