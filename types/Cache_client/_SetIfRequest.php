<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: cacheclient.proto

namespace Cache_client;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>cache_client._SetIfRequest</code>
 */
class _SetIfRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>bytes cache_key = 1;</code>
     */
    protected $cache_key = '';
    /**
     * Generated from protobuf field <code>bytes cache_body = 2;</code>
     */
    protected $cache_body = '';
    /**
     * Generated from protobuf field <code>uint64 ttl_milliseconds = 3;</code>
     */
    protected $ttl_milliseconds = 0;
    protected $condition;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $cache_key
     *     @type string $cache_body
     *     @type int|string $ttl_milliseconds
     *     @type \Common\Present $present
     *     @type \Common\PresentAndNotEqual $present_and_not_equal
     *     @type \Common\Absent $absent
     *     @type \Common\Equal $equal
     *     @type \Common\AbsentOrEqual $absent_or_equal
     *     @type \Common\NotEqual $not_equal
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Cacheclient::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>bytes cache_key = 1;</code>
     * @return string
     */
    public function getCacheKey()
    {
        return $this->cache_key;
    }

    /**
     * Generated from protobuf field <code>bytes cache_key = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setCacheKey($var)
    {
        GPBUtil::checkString($var, False);
        $this->cache_key = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>bytes cache_body = 2;</code>
     * @return string
     */
    public function getCacheBody()
    {
        return $this->cache_body;
    }

    /**
     * Generated from protobuf field <code>bytes cache_body = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setCacheBody($var)
    {
        GPBUtil::checkString($var, False);
        $this->cache_body = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>uint64 ttl_milliseconds = 3;</code>
     * @return int|string
     */
    public function getTtlMilliseconds()
    {
        return $this->ttl_milliseconds;
    }

    /**
     * Generated from protobuf field <code>uint64 ttl_milliseconds = 3;</code>
     * @param int|string $var
     * @return $this
     */
    public function setTtlMilliseconds($var)
    {
        GPBUtil::checkUint64($var);
        $this->ttl_milliseconds = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.common.Present present = 4;</code>
     * @return \Common\Present|null
     */
    public function getPresent()
    {
        return $this->readOneof(4);
    }

    public function hasPresent()
    {
        return $this->hasOneof(4);
    }

    /**
     * Generated from protobuf field <code>.common.Present present = 4;</code>
     * @param \Common\Present $var
     * @return $this
     */
    public function setPresent($var)
    {
        GPBUtil::checkMessage($var, \Common\Present::class);
        $this->writeOneof(4, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.common.PresentAndNotEqual present_and_not_equal = 5;</code>
     * @return \Common\PresentAndNotEqual|null
     */
    public function getPresentAndNotEqual()
    {
        return $this->readOneof(5);
    }

    public function hasPresentAndNotEqual()
    {
        return $this->hasOneof(5);
    }

    /**
     * Generated from protobuf field <code>.common.PresentAndNotEqual present_and_not_equal = 5;</code>
     * @param \Common\PresentAndNotEqual $var
     * @return $this
     */
    public function setPresentAndNotEqual($var)
    {
        GPBUtil::checkMessage($var, \Common\PresentAndNotEqual::class);
        $this->writeOneof(5, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.common.Absent absent = 6;</code>
     * @return \Common\Absent|null
     */
    public function getAbsent()
    {
        return $this->readOneof(6);
    }

    public function hasAbsent()
    {
        return $this->hasOneof(6);
    }

    /**
     * Generated from protobuf field <code>.common.Absent absent = 6;</code>
     * @param \Common\Absent $var
     * @return $this
     */
    public function setAbsent($var)
    {
        GPBUtil::checkMessage($var, \Common\Absent::class);
        $this->writeOneof(6, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.common.Equal equal = 7;</code>
     * @return \Common\Equal|null
     */
    public function getEqual()
    {
        return $this->readOneof(7);
    }

    public function hasEqual()
    {
        return $this->hasOneof(7);
    }

    /**
     * Generated from protobuf field <code>.common.Equal equal = 7;</code>
     * @param \Common\Equal $var
     * @return $this
     */
    public function setEqual($var)
    {
        GPBUtil::checkMessage($var, \Common\Equal::class);
        $this->writeOneof(7, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.common.AbsentOrEqual absent_or_equal = 8;</code>
     * @return \Common\AbsentOrEqual|null
     */
    public function getAbsentOrEqual()
    {
        return $this->readOneof(8);
    }

    public function hasAbsentOrEqual()
    {
        return $this->hasOneof(8);
    }

    /**
     * Generated from protobuf field <code>.common.AbsentOrEqual absent_or_equal = 8;</code>
     * @param \Common\AbsentOrEqual $var
     * @return $this
     */
    public function setAbsentOrEqual($var)
    {
        GPBUtil::checkMessage($var, \Common\AbsentOrEqual::class);
        $this->writeOneof(8, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>.common.NotEqual not_equal = 9;</code>
     * @return \Common\NotEqual|null
     */
    public function getNotEqual()
    {
        return $this->readOneof(9);
    }

    public function hasNotEqual()
    {
        return $this->hasOneof(9);
    }

    /**
     * Generated from protobuf field <code>.common.NotEqual not_equal = 9;</code>
     * @param \Common\NotEqual $var
     * @return $this
     */
    public function setNotEqual($var)
    {
        GPBUtil::checkMessage($var, \Common\NotEqual::class);
        $this->writeOneof(9, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getCondition()
    {
        return $this->whichOneof("condition");
    }

}

