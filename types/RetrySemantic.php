<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: extensions.proto

/**
 * A hint so you can decide a little more in the abstract "can this be retried?""
 *
 * Protobuf type <code>RetrySemantic</code>
 */
class RetrySemantic
{
    /**
     * Never retry this message without telling the user. (you should infer this as the default)
     *
     * Generated from protobuf enum <code>NotRetryable = 0;</code>
     */
    const NotRetryable = 0;
    /**
     * You can retry this without surfacing an error to the user.
     *
     * Generated from protobuf enum <code>Retryable = 1;</code>
     */
    const Retryable = 1;

    private static $valueToName = [
        self::NotRetryable => 'NotRetryable',
        self::Retryable => 'Retryable',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

